/// Represents a single entry in a Redis stream.
#[derive(Debug, Clone)]
pub struct Stream {
    /// The Redis stream entry ID, automatically generated by Redis if not provided.
    pub id: Option<String>,
    /// The key of the Redis stream to which this entry belongs.
    pub key: String,
    /// The list of field-value pairs stored in this stream entry, represented as a Redis array.
    pub fields: redis::Value,
}

impl Stream {
    /// Creates a new `Stream` instance.
    ///
    /// # Arguments
    ///
    /// * `key` - The Redis stream key this entry belongs to.
    /// * `id` - Optional entry ID. If `None`, Redis will auto-generate one upon insertion.
    /// * `fields` - A Redis value containing field-value pairs.
    pub fn new(key: &str, id: Option<String>, fields: redis::Value) -> Self {
        Stream {
            id,
            key: key.to_owned(),
            fields,
        }
    }
}
