/// Represents a single `Stream Entry` in a Redis stream.
#[derive(Debug, Clone)]
pub struct Entry {
    /// The Redis stream entry ID, automatically generated by Redis if not provided.
    pub id: Option<String>,
    /// The key of the Redis stream this entry belongs to.
    pub key: String,
    /// The field-value pairs stored in this stream entry, represented as a Redis value.
    pub fields: redis::Value,
}

impl Entry {
    /// Creates a new `Stream Entry` instance.
    ///
    /// # Arguments
    ///
    /// * `key` - The Redis stream key this entry belongs to.
    /// * `fields` - A Redis value containing field-value pairs.
    pub fn new(key: &str, fields: redis::Value) -> Self {
        Entry {
            id: None,
            key: key.to_owned(),
            fields,
        }
    }

    /// Sets the ID for this entry and returns the modified `Entry`.
    pub fn with_id(mut self, id: String) -> Self {
        self.id = Some(id);
        self
    }
}
